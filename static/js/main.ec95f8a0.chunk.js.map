{"version":3,"sources":["actions/index.js","containers/Block.jsx","components/App.jsx","enhancers/monitorReducers.js","middleware/logger.js","reducers/board.js","reducers/index.js","configureStore.js","index.js"],"names":["ActionTypes","Block","props","state","block","board","x","y","handleClick","bind","e","preventDefault","this","button","flag","style","height","width","backgroundImage","revealed","className","count","win","mine","onContextMenu","onClick","React","Component","connect","dispatch","type","userClick","App","table","i","row","j","push","key","root","Container","Row","Col","id","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","Math","round","console","log","logger","store","next","info","result","getState","getCopy","copy","length","defaultState","numMines","random","floor","floodFillMod","sourceBoard","source","up","right","down","left","upright","upleft","downright","downleft","undefined","checkGame","combineReducers","alert","preloadedState","configureStore","rootReducer","middleware","loggerMiddleware","getDefaultMiddleware","enhancers","monitorReducersEnhancer","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec95f8a0.chunk.js","sourcesContent":["export const ActionTypes = {\n\tINIT_GAME: 'INIT_GAME',\n\tUSER_CLICK: 'USER_CLICK'\n}\n\nexport const userClick = (button, x, y) => ({\n\ttype: 'USER_CLICK',\n\tbutton: button,\n\tx: x,\n\ty: y\n})\n\nexport const initGame = (boardSize) => ({\n\ttype: 'INIT_GAME'\n})","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { userClick } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tboard: state.board.board,\n\t\twin: state.board.win\n\t}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\thandleClick: (button, x, y) => {\n\t\t\tdispatch(userClick(button, x, y))\n\t\t}\n\t}\n};\n\nclass Block extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tblock: this.props.board[this.props.x][this.props.y]\n\t\t}\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick(e) {\n\t\te.preventDefault();\n\t\tthis.props.handleClick(e.button, this.props.x, this.props.y);\n\t}\n\n\trender() {\n\t\tlet block = this.props.board[this.props.x][this.props.y];\n\t\tlet x;\n\t\t// Render sequence\n\t\tif (block.flag) x = (<div style={{ height: '100%', width: '100%', backgroundImage: \"flag.png\" }}></div>)\n\t\telse if (block.revealed) x = (<div className='revealed'><p>{block.count}</p></div>)\n\t\telse x = <div className='unrevealed'></div>;\n\n\t\tif (this.props.win && block.mine) x = (<div style={{ width: '100%', height: '100%', backgroundImage: 'url(mine.png)' }}></div>)\n\n\t\treturn (\n\t\t\t<td style={{ backgroundImage: 'flag.png' }} onContextMenu={this.handleClick} onClick={this.handleClick}>\n\t\t\t\t{x}\n\t\t\t</td>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Block)","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col } from 'reactstrap'\n\nimport \"./app.css\"\nimport Block from '../containers/Block';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\troot: state.board\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {}\n}\n\nclass App extends React.Component {\n\trender() {\n\t\t// console.log(this.props);\n\t\tlet table = [];\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tlet row = [];\n\t\t\tfor (let j = 0; j < 10; j++) {\n\t\t\t\trow.push(\n\t\t\t\t\t<Block\n\t\t\t\t\t\tkey={j}\n\t\t\t\t\t\tmine={this.props.root.board[i][j].mine}\n\t\t\t\t\t\tx={i}\n\t\t\t\t\t\ty={j}\n\t\t\t\t\t>\n\t\t\t\t\t</Block>\n\t\t\t\t);\n\t\t\t}\n\t\t\ttable.push(<tr key={i}>{row}</tr>);\n\t\t}\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"text-center mt-5 mb-5\">\n\t\t\t\t\t\t<h1>Minesweeper with React-Redux</h1>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"text-center\">\n\t\t\t\t\t\t<table id=\"gameTable\" className=\"mx-auto\">\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{table}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"text-center mt-5 mb-5\">\n\t\t\t\t\t\t<p>Use left click to reveal blocks, and right click to flag blocks.</p>\n\t\t\t\t\t\t<p>After flagging all mines, you win the game.</p>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n\treducer,\n\tinitialState,\n\tenhancer\n) => {\n\tconst monitoredReducer = (state, action) => {\n\t\tconst start = performance.now();\n\t\tconst newState = reducer(state, action);\n\t\tconst end = performance.now();\n\t\tconst diff = round(end - start);\n\n\t\tconsole.log('reducer process time:', diff);\n\n\t\treturn newState;\n\t}\n\n\treturn createStore(monitoredReducer, initialState, enhancer);\n}\n\nexport default monitorReducerEnhancer;","const logger = store => next => action => {\n\tconsole.log(action.type);\n\tconsole.info('dispatching', action);\n\tlet result = next(action);\n\tconsole.log('next state', store.getState());\n\treturn result;\n}\n\nexport default logger;","import { ActionTypes } from \"../actions\";\n\nlet getCopy = (board) => {\n\tlet copy = [];\n\tfor (let i = 0; i < board.length; i++) {\n\t\tlet row = [];\n\t\tfor (let j = 0; j < board[i].length; j++) {\n\t\t\trow.push({ ...board[i][j] });\n\t\t}\n\t\tcopy.push(row);\n\t}\n\treturn copy;\n}\n\nlet defaultState = () => {\n\tlet numMines = Math.random() * 10 + 10;\n\tlet board = [];\n\tfor (let i = 0; i < 10; i++) {\n\t\tlet row = [];\n\t\tfor (let j = 0; j < 10; j++) {\n\t\t\trow.push({ mine: false, revealed: false, flag: false });\n\t\t}\n\t\tboard.push(row);\n\t}\n\tfor (let i = 0; i < numMines; i++) {\n\t\t// Random x and y in between 0 and 9\n\t\tlet x = Math.floor(Math.random() * 10);\n\t\tlet y = Math.floor(Math.random() * 10);\n\n\t\tboard[x][y].mine = true;\n\t}\n\treturn {\n\t\tboard: board,\n\t\twin: false\n\t};\n}\n\nconst floodFillMod = (sourceBoard, source) => {\n\tlet count = 0;\n\tlet board = getCopy(sourceBoard);\n\tlet up = false, right = false, down = false, left = false, upright = false, upleft = false, downright = false, downleft = false;\n\tconsole.log(\"Flood source: \" + source.x + ', ' + source.y);\n\tconsole.log(board);\n\tif (board[source.x][source.y].revealed) {\n\t\tconsole.log(\"Already revealed, return unmodded board\");\n\t\treturn board;\n\t}\n\n\tif (board[source.x] !== undefined && board[source.x][source.y + 1] !== undefined) up = true;\n\tif (board[source.x + 1] !== undefined && board[source.x + 1][source.y + 1] !== undefined) upright = true;\n\tif (board[source.x + 1] !== undefined && board[source.x + 1][source.y] !== undefined) right = true;\n\tif (board[source.x + 1] !== undefined && board[source.x + 1][source.y - 1] !== undefined) downright = true;\n\tif (board[source.x] !== undefined && board[source.x][source.y - 1] !== undefined) down = true;\n\tif (board[source.x - 1] !== undefined && board[source.x - 1][source.y - 1] !== undefined) downleft = true;\n\tif (board[source.x - 1] !== undefined && board[source.x - 1][source.y] !== undefined) left = true;\n\tif (board[source.x - 1] !== undefined && board[source.x - 1][source.y + 1] !== undefined) upleft = true;\n\n\t// Up\n\tif (up && board[source.x][source.y + 1].mine) count += 1;\n\t// Up and Right\n\tif (upright && board[source.x + 1][source.y + 1].mine) count += 1;\n\t// Right\n\tif (right && board[source.x + 1][source.y].mine) count += 1;\n\t// Down and Right\n\tif (downright && board[source.x + 1][source.y - 1].mine) count += 1;\n\t// Down\n\tif (down && board[source.x][source.y - 1].mine) count += 1;\n\t// Down and Left\n\tif (downleft && board[source.x - 1][source.y - 1].mine) count += 1;\n\t// Left\n\tif (left && board[source.x - 1][source.y].mine) count += 1;\n\t// Left and Up\n\tif (upleft && board[source.x - 1][source.y + 1].mine) count += 1;\n\n\tboard[source.x][source.y].count = count;\n\tboard[source.x][source.y].revealed = true;\n\t// If count is 0, flood all adjacent cells\n\tif (count === 0) {\n\t\t// Up\n\t\tif (up && !board[source.x][source.y + 1].revealed) board = floodFillMod(board, { x: source.x, y: source.y + 1 });\n\t\t// Up and Right\n\t\tif (upright && !board[source.x + 1][source.y + 1].revealed) board = floodFillMod(board, { x: source.x + 1, y: source.y + 1 });\n\t\t// Right\n\t\tif (right && !board[source.x + 1][source.y].revealed) board = floodFillMod(board, { x: source.x + 1, y: source.y });\n\t\t// Down and Right\n\t\tif (downright && !board[source.x + 1][source.y - 1].revealed) board = floodFillMod(board, { x: source.x + 1, y: source.y - 1 });\n\t\t// Down\n\t\tif (down && !board[source.x][source.y - 1].revealed) board = floodFillMod(board, { x: source.x, y: source.y - 1 });\n\t\t// Down and Left\n\t\tif (downleft && !board[source.x - 1][source.y - 1].revealed) board = floodFillMod(board, { x: source.x - 1, y: source.y - 1 });\n\t\t// Left\n\t\tif (left && !board[source.x - 1][source.y].revealed) board = floodFillMod(board, { x: source.x - 1, y: source.y });\n\t\t// Left and Up\n\t\tif (upleft && !board[source.x - 1][source.y + 1].revealed) board = floodFillMod(board, { x: source.x - 1, y: source.y + 1 });\n\t} else {\n\t\treturn board;\n\t}\n\treturn board;\n}\n\nconst checkGame = (board) => {\n\tlet win = true;\n\tfor (let i = 0; i < 10; i++) {\n\t\tfor (let j = 0; j < 10; j++) {\n\t\t\tif (board[i][j].mine) {\n\t\t\t\t// Check if it's a mine, if it's  a mine, then check if it's flagged,\n\t\t\t\t// If it's flagged, continue, if it's not, win = false;\n\t\t\t\tif (!board[i][j].flag) {\n\t\t\t\t\twin = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn win;\n}\n\nexport default (state = defaultState(), action) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.INIT_GAME:\n\t\t\treturn defaultState();\n\t\tcase ActionTypes.USER_CLICK:\n\t\t\tlet copy = getCopy(state.board);\n\t\t\tlet button = action.button;\n\t\t\tlet x = action.x, y = action.y;\n\t\t\tif (button === 0) {\n\t\t\t\tif (copy[x][y].mine) {\n\t\t\t\t\talert(\"Game over\");\n\t\t\t\t} else {\n\t\t\t\t\tcopy = floodFillMod(copy, { x: x, y: y });\n\t\t\t\t}\n\t\t\t} else if (button === 2) {\n\t\t\t\tcopy[x][y].flag = !copy[x][y].flag;\n\t\t\t}\n\t\t\t// Check if game finished\n\t\t\tlet win = checkGame(copy);\n\t\t\treturn {\n\t\t\t\twin: win,\n\t\t\t\tboard: copy\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import { combineReducers } from 'redux'\nimport board from './board'\nexport default combineReducers({\n\tboard: board\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport monitorReducersEnhancer from './enhancers/monitorReducers'\nimport loggerMiddleware from './middleware/logger'\nimport rootReducer from './reducers'\n\n\nexport default function configureAppStore(preloadedState) {\n\tconst store = configureStore({\n\t\treducer: rootReducer,\n\t\tmiddleware: [loggerMiddleware, ...getDefaultMiddleware()],\n\t\tpreloadedState,\n\t\tenhancers: [monitorReducersEnhancer]\n\t})\n\tif (process.env.NODE_ENV !== 'production' && module.hot) {\n\t\tmodule.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n\t}\n\treturn store\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './components/App'\nimport configureStore from './configureStore'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst store = configureStore()\n\nconst renderApp = () => render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nif (process.env.NODE_ENV !== 'producion' && module.hot) {\n\tmodule.hot.accept('./components/App', renderApp);\n}\n\nrenderApp();"],"sourceRoot":""}